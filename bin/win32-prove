#!/usr/bin/env perl

use strict;
use warnings;

use JSON;
use Capture::Tiny 'capture';
use IO::All;
use Time::HiRes qw(tv_interval gettimeofday);
use Try::Tiny;

my $to_run = io->file('./setup.psh')->all;
# note that you *cannot* escape the entities in this "xml"
my $xml = "<powershell>$to_run</powershell>";

# TODO: create key `aws ec2 create-key-pair`
# TODO: create security-group `aws ec2 create-security-group/authorize-security-group-{egress,ingress}`,

my $t0 = [gettimeofday];
my $created = capture {
   system
      qw( aws ec2 run-instances
         --image-id ami-67cfe557
         --count 1
         --instance-type t2.micro
         --key-name MyKeyPair
         --security-group-ids sg-eafbed8f
         --user-data ), $xml
};

my $created_data = decode_json($created);

my $instance_id = $created_data->{Instances}[0]{InstanceId};

print "Instance created: $instance_id\n";

print "polling for password data\n";
my $password;
while (!$password) {
   my ($password_data, $err) = capture {
      system qw(
         aws ec2 get-password-data --instance-id), $instance_id,
         qw(--priv-launch-key /home/frew/Dropbox/MyKeyPair.pem);
   };

   try {
      $password = decode_json($password_data)->{PasswordData};
   } catch {
      die "$_ (content: $password_data, err: $err)"
   };

   sleep 2;
}

my $time_provisioned = tv_interval($t0);

printf "Instance provisioned (in %0.02fs)\n", $time_provisioned;

my $instance = capture {
   system qw( aws ec2 describe-instances --instance-ids), $instance_id;
};

my $instance_data = decode_json($instance);

exec qw( rdesktop -u Administrator -p ), $password, qw( -K -z -g 1680x1050),
   $instance_data->{Reservations}[0]{Instances}[0]{PublicIpAddress}
